[
  {
    "objectID": "data_analysis.html",
    "href": "data_analysis.html",
    "title": "Data Analysis",
    "section": "",
    "text": "import pandas as pd, os\n\ncsv_path = \"data/lightcast_job_postings.csv\"\ndf = pd.read_csv(csv_path, low_memory=False)\n\nprint(\"Rows, Cols:\", df.shape)\nprint(list(df.columns)[:40])\ndf.head(5)\n\nRows, Cols: (72498, 131)\n['ID', 'LAST_UPDATED_DATE', 'LAST_UPDATED_TIMESTAMP', 'DUPLICATES', 'POSTED', 'EXPIRED', 'DURATION', 'SOURCE_TYPES', 'SOURCES', 'URL', 'ACTIVE_URLS', 'ACTIVE_SOURCES_INFO', 'TITLE_RAW', 'BODY', 'MODELED_EXPIRED', 'MODELED_DURATION', 'COMPANY', 'COMPANY_NAME', 'COMPANY_RAW', 'COMPANY_IS_STAFFING', 'EDUCATION_LEVELS', 'EDUCATION_LEVELS_NAME', 'MIN_EDULEVELS', 'MIN_EDULEVELS_NAME', 'MAX_EDULEVELS', 'MAX_EDULEVELS_NAME', 'EMPLOYMENT_TYPE', 'EMPLOYMENT_TYPE_NAME', 'MIN_YEARS_EXPERIENCE', 'MAX_YEARS_EXPERIENCE', 'IS_INTERNSHIP', 'SALARY', 'REMOTE_TYPE', 'REMOTE_TYPE_NAME', 'ORIGINAL_PAY_PERIOD', 'SALARY_TO', 'SALARY_FROM', 'LOCATION', 'CITY', 'CITY_NAME']\n\n\n\n\n\n\n\n\n\nID\nLAST_UPDATED_DATE\nLAST_UPDATED_TIMESTAMP\nDUPLICATES\nPOSTED\nEXPIRED\nDURATION\nSOURCE_TYPES\nSOURCES\nURL\n...\nNAICS_2022_2\nNAICS_2022_2_NAME\nNAICS_2022_3\nNAICS_2022_3_NAME\nNAICS_2022_4\nNAICS_2022_4_NAME\nNAICS_2022_5\nNAICS_2022_5_NAME\nNAICS_2022_6\nNAICS_2022_6_NAME\n\n\n\n\n0\n1f57d95acf4dc67ed2819eb12f049f6a5c11782c\n9/6/2024\n2024-09-06 20:32:57.352 Z\n0.0\n6/2/2024\n6/8/2024\n6.0\n[\\n \"Company\"\\n]\n[\\n \"brassring.com\"\\n]\n[\\n \"https://sjobs.brassring.com/TGnewUI/Sear...\n...\n44.0\nRetail Trade\n441.0\nMotor Vehicle and Parts Dealers\n4413.0\nAutomotive Parts, Accessories, and Tire Retailers\n44133.0\nAutomotive Parts and Accessories Retailers\n441330.0\nAutomotive Parts and Accessories Retailers\n\n\n1\n0cb072af26757b6c4ea9464472a50a443af681ac\n8/2/2024\n2024-08-02 17:08:58.838 Z\n0.0\n6/2/2024\n8/1/2024\nNaN\n[\\n \"Job Board\"\\n]\n[\\n \"maine.gov\"\\n]\n[\\n \"https://joblink.maine.gov/jobs/1085740\"\\n]\n...\n56.0\nAdministrative and Support and Waste Managemen...\n561.0\nAdministrative and Support Services\n5613.0\nEmployment Services\n56132.0\nTemporary Help Services\n561320.0\nTemporary Help Services\n\n\n2\n85318b12b3331fa490d32ad014379df01855c557\n9/6/2024\n2024-09-06 20:32:57.352 Z\n1.0\n6/2/2024\n7/7/2024\n35.0\n[\\n \"Job Board\"\\n]\n[\\n \"dejobs.org\"\\n]\n[\\n \"https://dejobs.org/dallas-tx/data-analys...\n...\n52.0\nFinance and Insurance\n524.0\nInsurance Carriers and Related Activities\n5242.0\nAgencies, Brokerages, and Other Insurance Rela...\n52429.0\nOther Insurance Related Activities\n524291.0\nClaims Adjusting\n\n\n3\n1b5c3941e54a1889ef4f8ae55b401a550708a310\n9/6/2024\n2024-09-06 20:32:57.352 Z\n1.0\n6/2/2024\n7/20/2024\n48.0\n[\\n \"Job Board\"\\n]\n[\\n \"disabledperson.com\",\\n \"dejobs.org\"\\n]\n[\\n \"https://www.disabledperson.com/jobs/5948...\n...\n52.0\nFinance and Insurance\n522.0\nCredit Intermediation and Related Activities\n5221.0\nDepository Credit Intermediation\n52211.0\nCommercial Banking\n522110.0\nCommercial Banking\n\n\n4\ncb5ca25f02bdf25c13edfede7931508bfd9e858f\n6/19/2024\n2024-06-19 07:00:00.000 Z\n0.0\n6/2/2024\n6/17/2024\n15.0\n[\\n \"FreeJobBoard\"\\n]\n[\\n \"craigslist.org\"\\n]\n[\\n \"https://modesto.craigslist.org/sls/77475...\n...\n99.0\nUnclassified Industry\n999.0\nUnclassified Industry\n9999.0\nUnclassified Industry\n99999.0\nUnclassified Industry\n999999.0\nUnclassified Industry\n\n\n\n\n5 rows × 131 columns"
  },
  {
    "objectID": "data_analysis.html#dropping-unnecessary-columns",
    "href": "data_analysis.html#dropping-unnecessary-columns",
    "title": "Data Analysis",
    "section": "2.1 Dropping Unnecessary Columns",
    "text": "2.1 Dropping Unnecessary Columns\n\ncolumns_to_drop = [\n    \"ID\",\"LAST_UPDATED_TIMESTAMP\",\"DUPLICATES\",\"ACTIVE_URLS\",\"ACTIVE_SOURCES_INFO\",\n    \"TITLE_RAW\",\"BODY\",\"COMPANY_RAW\",\n    \"NAICS2\",\"NAICS2_NAME\",\"NAICS3\",\"NAICS3_NAME\",\"NAICS4\",\"NAICS4_NAME\",\n    \"NAICS5\",\"NAICS5_NAME\",\"NAICS6\",\"NAICS6_NAME\",\n    \"NAICS_2022_2\",\"NAICS_2022_2_NAME\",\"NAICS_2022_3\",\"NAICS_2022_3_NAME\",\n    \"NAICS_2022_4\",\"NAICS_2022_4_NAME\",\"NAICS_2022_5\",\"NAICS_2022_5_NAME\",\n    \"SOC_2\",\"SOC_2_NAME\",\"SOC_3\",\"SOC_3_NAME\",\"SOC_5\",\"SOC_5_NAME\",\n    \"CIP2\",\"CIP2_NAME\",\"CIP4\",\"CIP4_NAME\",\"CIP6\",\"CIP6_NAME\",\n    \"LOT_CAREER_AREA\",\"LOT_CAREER_AREA_NAME\",\"LOT_OCCUPATION\",\"LOT_OCCUPATION_NAME\",\n    \"LOT_SPECIALIZED_OCCUPATION\",\"LOT_SPECIALIZED_OCCUPATION_NAME\",\n    \"LOT_OCCUPATION_GROUP\",\"LOT_OCCUPATION_GROUP_NAME\",\n    \"LOT_V6_SPECIALIZED_OCCUPATION\",\"LOT_V6_SPECIALIZED_OCCUPATION_NAME\",\n    \"LOT_V6_OCCUPATION\",\"LOT_V6_OCCUPATION_NAME\",\"LOT_V6_OCCUPATION_GROUP\",\n    \"LOT_V6_OCCUPATION_GROUP_NAME\",\"LOT_V6_CAREER_AREA\",\"LOT_V6_CAREER_AREA_NAME\",\n    \"ONET\",\"ONET_NAME\",\"ONET_2019\",\"ONET_2019_NAME\"\n]\ndrop_existing = [c for c in columns_to_drop if c in df.columns]\ndf.drop(columns=drop_existing, inplace=True)\nprint(\"Remaining columns (first 30):\", list(df.columns)[:30])\n\nRemaining columns (first 30): ['LAST_UPDATED_DATE', 'POSTED', 'EXPIRED', 'DURATION', 'SOURCE_TYPES', 'SOURCES', 'URL', 'MODELED_EXPIRED', 'MODELED_DURATION', 'COMPANY', 'COMPANY_NAME', 'COMPANY_IS_STAFFING', 'EDUCATION_LEVELS', 'EDUCATION_LEVELS_NAME', 'MIN_EDULEVELS', 'MIN_EDULEVELS_NAME', 'MAX_EDULEVELS', 'MAX_EDULEVELS_NAME', 'EMPLOYMENT_TYPE', 'EMPLOYMENT_TYPE_NAME', 'MIN_YEARS_EXPERIENCE', 'MAX_YEARS_EXPERIENCE', 'IS_INTERNSHIP', 'SALARY', 'REMOTE_TYPE', 'REMOTE_TYPE_NAME', 'ORIGINAL_PAY_PERIOD', 'SALARY_TO', 'SALARY_FROM', 'LOCATION']"
  },
  {
    "objectID": "data_analysis.html#handling-missing-values",
    "href": "data_analysis.html#handling-missing-values",
    "title": "Data Analysis",
    "section": "2.2 Handling Missing Values",
    "text": "2.2 Handling Missing Values\n\ntry:\n    import missingno as msno, matplotlib.pyplot as plt\n    msno.heatmap(df)\n    plt.title(\"Missing Values Heatmap\")\n    plt.show()\nexcept Exception as e:\n    print(\"missingno heatmap skipped:\", e)\n\ndf.dropna(thresh=len(df) * 0.5, axis=1, inplace=True)\n\nif \"SALARY\" in df.columns:\n    df[\"SALARY\"] = pd.to_numeric(df[\"SALARY\"], errors=\"coerce\")\n    df[\"SALARY\"].fillna(df[\"SALARY\"].median(), inplace=True)\n\nfor col in df.select_dtypes(include=\"object\").columns:\n    df[col].fillna(\"Unknown\", inplace=True)\n\n\n\n\n\n\n\n\n/var/folders/g7/sfc5tly50013vn_cy1c842180000gn/T/ipykernel_7902/1704429780.py:16: FutureWarning:\n\nA value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object."
  },
  {
    "objectID": "data_analysis.html#removing-duplicates",
    "href": "data_analysis.html#removing-duplicates",
    "title": "Data Analysis",
    "section": "2.3 Removing Duplicates",
    "text": "2.3 Removing Duplicates\n\nsubset_cols = [c for c in [\"TITLE\",\"COMPANY_NAME\",\"LOCATION\",\"POSTED\"] if c in df.columns]\nif subset_cols:\n    before = len(df)\n    df.drop_duplicates(subset=subset_cols, keep=\"first\", inplace=True)\n    print(f\"Removed {before - len(df)} duplicates using {subset_cols}\")\nelse:\n    print(\"No standard duplicate keys found; skipping.\")\n\nRemoved 3300 duplicates using ['TITLE', 'COMPANY_NAME', 'LOCATION', 'POSTED']"
  },
  {
    "objectID": "data_analysis.html#job-postings-by-industry",
    "href": "data_analysis.html#job-postings-by-industry",
    "title": "Data Analysis",
    "section": "3.1 Job Postings by Industry",
    "text": "3.1 Job Postings by Industry\n\nimport plotly.express as px\n\nindustry_col = (\n    \"NAICS_2022_6_NAME\" if \"NAICS_2022_6_NAME\" in df.columns\n    else (\"INDUSTRY\" if \"INDUSTRY\" in df.columns else None)\n)\nif industry_col is None:\n    print(\"No industry column found.\")\nelse:\n    counts = (\n        df[industry_col]\n        .value_counts()\n        .head(15)\n        .reset_index(name=\"Job Postings\")\n        .rename(columns={industry_col: \"Industry\"})\n        .sort_values(\"Job Postings\")\n    )\n    fig = px.bar(\n        counts,\n        x=\"Job Postings\",\n        y=\"Industry\",\n        orientation=\"h\",\n        title=\"Top 15 Industries by Number of Job Postings\"\n    )\n    fig.show()"
  },
  {
    "objectID": "data_analysis.html#salary-distribution-by-industry",
    "href": "data_analysis.html#salary-distribution-by-industry",
    "title": "Data Analysis",
    "section": "3.2 Salary Distribution by Industry",
    "text": "3.2 Salary Distribution by Industry\n\nimport numpy as np, plotly.express as px\n\nindustry_col = (\n    \"NAICS_2022_6_NAME\" if \"NAICS_2022_6_NAME\" in df.columns\n    else (\"INDUSTRY\" if \"INDUSTRY\" in df.columns else None)\n)\nsalary_candidates = [\"SALARY\",\"SALARY_MEDIAN\",\"SALARY_MID\",\"SALARY_ANNUAL\",\"PAY_RATE\"]\nsalary_col = next((c for c in salary_candidates if c in df.columns), None)\n\nif industry_col is None or salary_col is None:\n    print(\"Missing salary or industry column for plot.\")\nelse:\n    sdf = df[[industry_col, salary_col]].copy()\n    sdf[salary_col] = pd.to_numeric(sdf[salary_col], errors=\"coerce\")\n    sdf = sdf.dropna(subset=[salary_col]).query(f\"{salary_col} &gt; 0\")\n    fig2 = px.box(\n        sdf,\n        x=industry_col,\n        y=salary_col,\n        title=\"Salary Distribution by Industry\",\n        points=False\n    )\n    fig2.update_layout(xaxis_tickangle=-45)\n    fig2.show()\n\nMissing salary or industry column for plot."
  },
  {
    "objectID": "data_analysis.html#remote-vs.-on-site-jobs",
    "href": "data_analysis.html#remote-vs.-on-site-jobs",
    "title": "Data Analysis",
    "section": "3.3 Remote vs. On-Site Jobs",
    "text": "3.3 Remote vs. On-Site Jobs\n\nimport plotly.express as px\n\nif \"REMOTE_TYPE_NAME\" in df.columns:\n    rc = df[\"REMOTE_TYPE_NAME\"].value_counts().reset_index()\n    rc.columns = [\"Remote Type\",\"Count\"]\n    fig3 = px.pie(\n        rc,\n        names=\"Remote Type\",\n        values=\"Count\",\n        title=\"Remote vs. On-Site Job Distribution\"\n    )\n    fig3.show()\nelse:\n    print(\"No REMOTE_TYPE_NAME column available.\")"
  },
  {
    "objectID": "data_analysis.html#eda-rationale-insights",
    "href": "data_analysis.html#eda-rationale-insights",
    "title": "Data Analysis",
    "section": "3.4 EDA: Rationale & Insights",
    "text": "3.4 EDA: Rationale & Insights\n\n3.4.1 Why these visualizations\n\nJob Postings by Industry (bar chart) compares demand across industries to prioritize where to focus a job search.\nSalary Distribution by Industry (box plot) shows median and spread, robust to skew in salary data.\nRemote vs. On-Site (pie chart) summarizes work-arrangement mix to set expectations for location flexibility.\n\n\n\n3.4.2 Key insights from the graphs\n\nIndustry demand: A few industries dominate postings; target those first while keeping secondary sectors.\nSalary patterns: Wide dispersion in some industries implies upside for well-positioned candidates.\nWork arrangement mix: Higher remote share expands options; lower share requires local strategy.\nActionable takeaway: Combine where demand is high, where salary upside exists, and where work arrangement fits your constraints to prioritize applications."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "AI vs. Non-AI Job Growth",
    "section": "",
    "text": "Introduction\nArtificial intelligence (AI) is changing the working world, affecting jobs and livelihood. This makes AI an important topic to study. Jobs that are related to AI, such as data science, robotics, and machine learning, are becoming more common, often paying well. Simultaneously, traditional jobs such as farming, retail, or office work are slowly being reduced and taken over due to automation and new advanced technology taking over. This does not imply that every job disappears; however, it does mean that the job market is shifting alongside AI, and people are starting to worry that their future careers might not be as secure as before.\nIn 2024, people are worried about job security as many industries are already adopting AI tools. Some see AI as a threat to their jobs, while others see it as a chance to move into new roles. Looking at AI versus non-AI careers will help us further understand how and where job opportunities are growing, which areas are shrinking, and what skills people may need to adapt in the future.\n\n\nResearch Rationale\nThis topic is not only important, but also interesting to understand because it highlights how the progress of AI can actually eliminate and create jobs at the same time. In 2024, many companies are integrating AI, accelerating changes in the job market. Automation is replacing repetitive tasks, while AI-driven roles are much higher in demand. However, this transition is not equal.\nAI affects people differently depending on their job, skill level, and where they live. For example, store cashiers are being replaced by self-checkout machines, but new jobs like AI engineers are being created to build and maintain those systems. The problem is that it might take five people to run a store, but an entire company may only need a few engineers to build the technology that replaces these cashiers. This means that some workers may lose jobs unless they learn new skills (see e.g., Tiwari ((2023))).\n\n\nPreliminary Discussion\nAI has already shown a large positive impact: it reduces the need for workers in routine tasks while simultaneously creating new job roles like AI ethics officers and prompt engineers. These jobs did not exist a decade ago, which shows that AI is not necessarily taking away jobs but also opening new career paths.\nThe real issue is that the shift is uneven. It is not always a fair trade when losing one job and gaining another because some countries with strong economies may be able to support workers with training programs, but poorer countries may not. It should also be noted that there will be workers who are not interested in technological roles. This shows that AI’s impact depends on economics, training opportunities, and even personal preference and interest. In some settings AI tools raise worker productivity—especially for newer workers—rather than replace them outright (Brynjolfsson, Li, and Raymond ((2023))); employers are also placing more value on complementary human skills (teamwork, adaptability, digital literacy) even as purely routine tasks decline (Mäkelä and Stephany ((2024))).\n\n\nLiterature Review\nResearchers have studied how AI is affecting jobs, and findings vary. Tiwari ((2023)) explains that while AI/ML can replace some roles—especially repetitive, routine work—they also create opportunities in areas like data analysis and AI system development. The key challenge is reskilling: workers’ ability to adapt to new roles determines whether they benefit.\nOther studies show that AI can help workers instead of only replacing them. Brynjolfsson, Li, and Raymond ((2023)) find that customer service workers, especially new ones, became more productive when using AI tools alongside normal tasks. Mäkelä and Stephany ((2024)) analyze job ads across countries and find demand rising for human, complementary skills (teamwork, adaptability, digital literacy), while demand falls for narrowly routine tasks. Together, these findings suggest AI’s effects are heterogeneous: outcomes vary by occupation, tasks, skills, and context.\n\n\n\n\n\n\n\n\nReferences\n\nBrynjolfsson, E., D. Li, and L. Raymond. (2023): “Generative AI at work,” arXiv preprint arXiv:2304.11771,.\n\n\nMäkelä, E., and F. Stephany. (2024): “Complement or substitute? How AI increases the demand for human skills,” arXiv preprint arXiv:2412.19754,.\n\n\nTiwari, R. (2023): “The impact of AI and machine learning on job displacement and employment opportunities,” International Journal of Engineering Technologies and Management Research, 7, 1–9."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About the Team",
    "section": "",
    "text": "Team: Connor Coulter, Wei Wang, Balqis Bevi Abdul Hannan Kanaga\nTopic: AI vs. Non-AI Job Growth — Is AI taking over or creating more jobs?\nCourse: AD 688 – Cloud Analytics for Business\nThis site hosts our research rationale, intro, and literature review for Project Selection I."
  }
]